version: '3.5'

services:
    broker:
        command: confluent broker
        container_name: broker
        depends_on:
            - zookeeper
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JAVA_HOME: /usr/lib/jvm/java-11-openjdk
            KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP:?}
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST_IP:?}:9092
#            KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://${HOST_IP:?}:9092
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_BOOTSTRAP_SERVERS: $KAFKA_BOOTSTRAP_SERVERS
            KAFKA_BROKER_ID: ${KAFKA_ID:?}
            KAFKA_COMPRESSION_TYPE: gzip
            KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'true'
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_HEAP_OPTS: "-Xmx6G -Xms6G"
            KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${HOST_IP} -Djava.net.preferIPv4Stack=true -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=${JMX_PORT} -Dcom.sun.management.jmxremote.port=${JMX_PORT} -Dzookeeper.sasl.client=ZkClient"
            KAFKA_JMX_PORT: ${JMX_PORT:?}
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#            KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
            KAFKA_NUM_PARTITIONS: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOSTS:?}
            ZOOKEEPER_TIMEOUT: 6000
        hostname: broker.s8.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/confluent/${CONFLUENT_VERSION:-6.2.0}:${CONTAINER_TAG:-f15e087910c8cc93504a2a8cc526479da3840f4a44090286299ef94a6db80008}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        links:
           - zookeeper
        networks:
            - kafka-net
        ports:
            - "${JMX_PORT}:${JMX_PORT}"
            - "9092:9092"
        restart: unless-stopped
        volumes:
            - ./broker/data:/usr/local/confluent/data
            - ./broker/logs:/usr/local/confluent/logs
            - ./broker/log:/var/log


#    metricbeat:
#        container_name: metricbeat
#        dns: 10.3.1.1
#        dns_search:
#            - ubuntu.home
#            - home
#        hostname: metricbeat
#        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}thirdparty/metricbeat:${METRICBEAT_VERSION:-7.9.3}
#        labels:
#            co.elastic.metrics/hosts: '$${data.host}:$${data.port}'
#            co.elastic.metrics/metricsets: status
#            co.elastic.metrics/module: metricbeat
#            co.elastic.metrics/period: 10s
#        logging:
#            driver: json-file
#            options:
#                max-file: "3"
#                max-size: "10m"
#        networks:
#            - kafka-net
#        restart: unless-stopped
#        user: root
#        volumes:
#            - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
##            - ./metricbeat/metricbeat.yml:/etc/metricbeat/metricbeat.yml:ro
#            - ./metricbeat/modules.d:/usr/share/metricbeat/modules.d:ro
#            - ./metricbeat/log:/var/log
#            - /var/run/docker.sock:/var/run/docker.sock
#            - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#            - /proc:/hostfs/proc:ro
#            - /:/hostfs:ro
#
#
    zookeeper:
        command: confluent zookeeper
        container_name: zookeeper
        dns: 10.3.1.1
        dns_search:
            - ubuntu.home
            - home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            JAVA_HOME: /usr/lib/jvm/java-11-openjdk
            ZOOKEEPER_SERVER_ID: ${KAFKA_ID:?}
            ZOOKEEPER_CLIENTPORT: 2181
            ZOOKEEPER_TICKTIME: 2000
            ZOOKEEPER_INITLIMIT: 10
            ZOOKEEPER_SYNCLIMIT: 5
            ZOOKEEPER_SERVER.1: s3.ubuntu.home:2888:3888
            ZOOKEEPER_SERVER.2: s4.ubuntu.home:2888:3888
            ZOOKEEPER_SERVER.3: 0.0.0.0:2888:3888
        hostname: zookeeper.s8.home
        image: ${DOCKER_REGISTRY:-s2.ubuntu.home:5000/}${CONTAINER_OS:-alpine}/confluent/${CONFLUENT_VERSION:-6.2.0}:${CONTAINER_TAG:-f15e087910c8cc93504a2a8cc526479da3840f4a44090286299ef94a6db80008}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        networks:
            - kafka-net
        ports:
            - "2181:2181"
            - "2888:2888"
            - "3888:3888"
        restart: unless-stopped
        volumes:
            - ./zookeeper/data:/usr/local/confluent/data
            - ./zookeeper/logs:/usr/local/confluent/logs 
            - ./zookeeper/log:/var/log
networks:
    kafka-net:
        name: kafka-container-net
